#!/usr/bin/rhea
# Copyright (c) 2025 - Nathanne Isip
# This file is part of Rhea.
# 
# Rhea is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
# 
# Rhea is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Rhea. If not, see <https://www.gnu.org/licenses/>.

import io {
    print,
    printLine,

    readString,
    readNumber,
    readBoolean,

    fileRead,       fileWrite,
    fileSize,       filePerms,
    fileDelete,     fileCreationDate,

    folderCreate,   folderSize,
    folderDelete,   folderCreationDate,

    isFile,
    isFolder,
    listAllFiles,

    exit
} from "core"

enum logType {
    info    = "INFO",
    error   = "ERR",
    warning = "WARN"
}

enum console.colors {
    fgNone    = "0",
    fgBlack   = "30",
    fgRed     = "31",
    fgGreen   = "32",
    fgYellow  = "33",
    fgBlue    = "34",
    fgMagenta = "35",
    fgCyan    = "36",
    fgWhite   = "37",

    bgNone    = "0",
    bgBlack   = "40",
    bgRed     = "41",
    bgGreen   = "42",
    bgYellow  = "43",
    bgBlue    = "44",
    bgMagenta = "45",
    bgCyan    = "46",
    bgWhite   = "47"
}

enum console.styles {
    bold      = "1",
    italic    = "3",
    underline = "4"
}

mod console {
    stylize: func(style, message)
        @ret "\e[" + style + "m" + message + "\e[0m"

    colorize: func(bgColor, fgColor, message) {
        if(bgColor == console.colors.bgNone)
            @ret("\e[" + fgColor + "m" + message + "\e[0m")
        else
            @ret("\e[" + fgColor + ";" + bgColor + "m" + message + "\e[0m")
    }

    log: func(message)
        @io.print(message)
}

mod console.log {
    info: func(message) {
        render console.stylize(
            console.styles.italic,
            chrono.format(chrono.now(), "%d/%m/%Y %H:%M:%S ")
        )

        render console.colorize(
            console.colors.bgCyan,
            console.colors.fgWhite,
            console.stylize(
                console.styles.bold,
                "[" + logType.info + "]"
            )
        )

        render! " :: " + message
    }

    error: func(message) {
        render console.stylize(
            console.styles.italic,
            chrono.format(chrono.now(), "%d/%m/%Y %H:%M:%S ")
        )

        render console.colorize(
            console.colors.bgRed,
            console.colors.fgWhite,
            console.stylize(
                console.styles.bold,
                "[" + logType.error + " ]"
            )
        )

        render! " :: " + message
    }

    warn: func(message) {
        render console.stylize(
            console.styles.italic,
            chrono.format(chrono.now(), "%d/%m/%Y %H:%M:%S ")
        )

        render console.colorize(
            console.colors.bgYellow,
            console.colors.fgWhite,
            console.stylize(
                console.styles.bold,
                "[" + logType.warning + "]"
            )
        )

        render! " :: " + message
    }
}
